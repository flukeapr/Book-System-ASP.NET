
@{
    ViewBag.Title = "Chat";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<html>
<head>
    <style>
        div.panel-body {
            overflow: scroll;
            background: url('http://subtlepatterns.com/patterns/geometry2.png');
        }
    </style>
</head>
<body>
    <h2>Chat</h2>

    <h2>ChatBox</h2>
    <div class="chat-panel panel panel-default">
        <div class="panel-heading">
            ChatBox using SingalR
            <i class="fa fa-paper-plane fa-fw"></i>
        </div>
        <!-- /.panel-heading -->
        <div class="panel-body" id="chat" style="height:250px;">
            <input type="hidden" id="displayname" />

            <p id="discussion"></p>
        </div>
        <!-- /.panel-body -->
        <div class="panel-footer">
            <div class="input-group">
                <input id="message" type="text" name="message" class="form-control input-sm" placeholder="Type your message here..." />

                <span class="input-group-btn">
                    <input type="button" class="btn btn-warning btn-sm" id="sendmessage" value="Send">

                </span>
            </div>
        </div>
    </div>
</body>
</html>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        var userName = @User.Identity.Name; // Set the user name here

        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                var name = @User.Identity.Name;
                if (name == userName) {
                    // Add the message to the page.
                    $('#discussion').append('<p style="color:green; text-align:left; width:500px"><strong><img = src="https://www.phplivesupport.com/pics/icons/avatars/public/avatar_7.png" title="Atir">'
                        + ' </strong> ' + htmlEncode(message) + '</p>');
                }
                else  {
                    // Add the message to the page.
                    $('#discussion').append('<p style="color:blue;text-align:right;"><strong><img = src="https://www.phplivesupport.com/pics/icons/avatars/public/avatar_71.png" title="Peter">'
                        + ' </strong> ' + htmlEncode(message) + '</p>');
                }
            };

            // Get the user name and store it to prepend to messages.
            // Removed the prompt line and set the user name directly from C#


            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send(userName, $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });

        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}

